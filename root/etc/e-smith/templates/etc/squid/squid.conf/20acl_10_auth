{
   use esmith::NetworksDB;
   my $ndb = esmith::NetworksDB->open_ro();
   my $green_mode = $squid{'GreenMode'} || "none";
   my $blue_mode = $squid{'BlueMode'} || "none";
   my $fqdn = "$SystemName.$DomainName";
   if ($green_mode eq 'authenticated' || (defined($ndb->blue()) && $blue_mode eq 'authenticated')) {
       $OUT .= "# Authentication required\n\n";

       if(defined $slapd && $slapd{'status'} eq 'enabled') {
	   # Use BASIC/LDAP auth if we have slapd
	   $OUT .= "# BASIC (LDAP)
auth_param basic program /usr/lib64/squid/basic_ldap_auth -b ou=People,dc=directory,dc=nh localhost
auth_param basic children 5
auth_param basic realm $fqdn
auth_param basic credentialsttl 1 hours
auth_param basic casesensitive on\n";
       } 

       if(defined $smb && $smb{'status'} eq 'enabled') {
	   if($smb{'ServerRole'} eq 'ADS') {
	       # Additional GSSAPI auth if we are ADS..
	       $OUT .= "# Negotiate (SPNEGO/GSSAPI)
auth_param negotiate program /usr/lib64/squid/negotiate_kerberos_auth
auth_param negotiate children 10
auth_param negotiate keep_alive on\n";
	   } elsif($smb{'ServerRole'} eq 'PDC') {
	       # ..Or additional NTLMSSP if we are PDC
	       $OUT .= "# NTLMSSP
auth_param ntlm program /usr/bin/ntlm_auth --helper-protocol=squid-2.5-ntlmssp
auth_param ntlm children 30\n";
	   }
       } 

       $OUT.="acl authenticated proxy_auth REQUIRED\n";
   }
}

