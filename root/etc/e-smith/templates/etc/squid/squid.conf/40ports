{
   use esmith::NetworksDB;
   my $ndb = esmith::NetworksDB->open_ro();
   my $portlist = $squid{'TCPPorts'} || "3128,3129,3130";
   my @ports = split(',',$portlist);
   my $green_mode = $squid{'GreenMode'} || "manual";
   my $blue_mode = $squid{'BlueMode'} || "manual";

   $OUT.="# Always enable manual proxy\n";
   $OUT.="http_port ".$ports[0]."\n";

   if ($green_mode eq 'transparent' || (defined($ndb->blue()) && $blue_mode eq 'transparent')) {
       $OUT.="# Enable transparent proxy\n";
       $OUT.="http_port ".$ports[1]." transparent\n";
   } elsif ($green_mode eq 'transparent_ssl' || (defined($ndb->blue()) && $blue_mode eq 'transparent_ssl')) {
       $OUT.="# Enable transparent proxy\n";
       $OUT.="http_port ".$ports[1]." transparent\n";
$OUT.="
# Enable ssl man-in-the-middle with default self-signed certs
https_port ".$ports[2]." transparent ssl-bump generate-host-certificates=on dynamic_cert_mem_cache_size=4MB  cert=/etc/pki/tls/certs/NSRV.crt key=/etc/pki/tls/private/NSRV.key
always_direct allow all
ssl_bump server-first all
sslproxy_cert_error allow all
sslproxy_cert_adapt setCommonName ssl::certDomainMismatch";
   }
}

